COMPILER SharpAlg

/*--------------------------------------------------------------------------*/
CHARACTERS
  letter = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".
  digit = "0123456789".
  cr  = '\r'.
  lf  = '\n'.
  tab = '\t'.

TOKENS
  identifier  = letter {letter | digit}.
  number = digit {digit}.
  floatNumber = {digit} '.' digit {digit}.

IGNORE cr + lf + tab

PRODUCTIONS

SharpAlg 										(. Expr expr; .)
= AdditiveExpression<out expr>					(. this.Expr = expr; .)
.

AdditiveExpression<out Expr expr>				(. bool minus; Expr rightExpr; .)			
= MultiplicativeExpression<out expr>
	{
	AdditiveOperation<out minus> 
	MultiplicativeExpression<out rightExpr>		(. expr = builder.Add(expr, (minus ? builder.Minus(rightExpr) : rightExpr)); .)
	}
.

AdditiveOperation<out bool minus>
=												(. minus = false; .)
  ( '+'
  | '-'											(. minus = true; .)
  )
.

MultiplicativeExpression<out Expr expr>			(. bool divide; Expr rightExpr; .)			
= PowerExpression<out expr>
	{
	MultiplicativeOperation<out divide> 
	PowerExpression<out rightExpr>				(. expr = builder.Multiply(expr, (divide ? builder.Inverse(rightExpr) : rightExpr)); .)
	}
.

MultiplicativeOperation<out bool divide>
=												(. divide = false; .)
  ( '*'
  | '/'											(. divide = true; .)
  )
.

PowerExpression<out Expr expr>					(. Expr rightExpr; .)			
= Terminal<out expr>
	{
	'^' 
	Terminal<out rightExpr>						(. expr = builder.Power(expr, rightExpr); .)
	}
.

Terminal<out Expr expr>							(. expr = null; .)
=	
	(number										(. expr = Expr.Constant(Number.FromString(t.val)); .)
	| floatNumber								(. expr = Expr.Constant(Number.FromString(t.val)); .)
	| '('AdditiveExpression<out expr>')'
	| FunctionCall<out expr>			
	| '-' Terminal<out expr>					(. expr = builder.Minus(expr); .)
	)
.

FunctionCall<out Expr expr>						(. string name; Expr arg = null; .)
= 
	identifier									(. name = t.val; .)
	{
	'('AdditiveExpression<out arg>')'			
	}											(. expr = arg != null ? (Expr)Expr.Function(name, arg) : Expr.Parameter(name); .)
.

END SharpAlg.
